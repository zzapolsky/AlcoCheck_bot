package org.example;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class AlcoCheckerBot extends TelegramLongPollingBot {
    Formula formula = new Formula();

    private static final String START = "/start";


    @Override
    public void onUpdateReceived(Update update) {

        if (update.hasCallbackQuery()) {
            handleCallBack(update.getCallbackQuery());


        } else if (!update.hasMessage() || !update.getMessage().hasText()) {
            return;
        }
        String message = update.getMessage().getText();
        Long chatId = update.getMessage().getChatId();
        String name = update.getMessage().getFrom().getUserName();


        if (START.equals(message)) {
            InlineKeyboardMarkup markUpInLine = new InlineKeyboardMarkup();      // —Å–æ–∑–¥–∞–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –ø–æ–ª–∞
            List<List<InlineKeyboardButton>> rowsInLine = new ArrayList<>();
            List<InlineKeyboardButton> rowInLine = new ArrayList<>();
            var button1 = new InlineKeyboardButton();
            button1.setText("–ú—É–∂—Å–∫–æ–π üë®");
            button1.setCallbackData("M");
            var button2 = new InlineKeyboardButton();
            button2.setText("–ñ–µ–Ω—Å–∫–∏–π üë©");
            button2.setCallbackData("F");
            rowInLine.add(button1);
            rowInLine.add(button2);
            rowsInLine.add(rowInLine);
            markUpInLine.setKeyboard(rowsInLine);


            try {
                execute(                                // —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–æ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –±–æ—Ç–∞
                        SendMessage.builder()
                                .text("–ü—Ä–∏–≤–µ—Ç, " + name + "!\n\n" +
                                        "–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–¥—Å–∫–∞–∂–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–µ—Å—Ç—å –∑–∞ —Ä—É–ª—å –ø–æ—Å–ª–µ –∏—Å–ø–∏—Ç–∏—è –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤.\n" +
                                        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n" +
                                        "–ë–æ—Ç –Ω–æ—Å–∏—Ç —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä.\n" +
                                        "–ê–ª–∫–æ–≥–æ–ª—å –≤—Ä–µ–¥–∏—Ç –≤–∞—à–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é.\uD83D\uDD1E \n" +
                                        "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª:")
                                .chatId(chatId)
                                .replyMarkup(markUpInLine)
                                .build());


            } catch (TelegramApiException e) {
                throw new RuntimeException(e);
            }
        } else {
            boolean contains = message.contains("–º–ª");
            if (contains) {

                Pattern pattern = Pattern.compile("\\d+");
                Matcher matcher = pattern.matcher(message);


                while (matcher.find()) {
                    formula.setVolume(Integer.parseInt(matcher.group()));
                }
                    int proverka = (int) formula.getVolume();
                    if (proverka > 14000) {
                        sendMessage(chatId, "–°—Ç–æ–ª—å–∫–æ –¥–∞–∂–µ –ø–∏–≤–∞ –Ω–µ –≤—ã–ø–∏—Ç—å. –î–æ–∫–∞–∑–∞–Ω–æ.\n" + "–ù–æ –º—ã –ø–æ—Å—á–∏—Ç–∞–µ–º.");
                    }
                    if (proverka < 13) {
                        sendMessage(chatId, "–í—ã –ø–æ—á—Ç–∏ —Ç—Ä–µ–∑–≤—ã.\n–û—Å—Ç–∞–ª—å–Ω–æ–µ, –≤–∏–¥–∏–º–æ, —Ä–∞–∑–ª–∏–ª–∏.\n" + "–°—á–∏—Ç–∞–µ–º.");
                    }


                    else sendMessage(chatId, "–í—ã–ø–∏—Ç–æ " + formula.getVolume() + " –º–∏–ª–ª–∏–ª–∏—Ç—Ä–æ–≤. –°—á–∏—Ç–∞–µ–º.");


                double drinks = formula.getVolume() / formula.getDrink();                // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –¥—Ä–∏–Ω–∫–æ–≤  (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ)

                double verh = drinks * 0.07 * 100 * 1.055;                              //  –≤–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å —Ñ–æ—Ä–º—É–ª—ã ( –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ)

                double ves = formula.getWeight() * 10 + 5;                             //  –≤–µ—Å —Å –∫–Ω–æ–ø–∫–∏ –∏ –¥–æ–ø–∏–ª–µ–Ω –¥–æ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã(–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ)
                double kef;
                double vivod;
                if (Objects.equals(formula.getSex(), "M")) {
                    kef = ves * 0.7;
                    vivod = 0.1;
                } else {                                                               // –≤–µ—Å, —É–º–Ω–æ–∂–µ–Ω–Ω—ã–π –Ω–∞ –∫–æ—ç—Ñ –≤–µ—Å–∞ –º –∏ –∂. –Ω–∏–∑ —Ñ–æ—Ä–º—É–ª—ã (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ)
                    kef = ves * 0.6;
                    vivod = 0.09;
                }
                formula.setResult((verh / kef));                                     // –¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä—Ö–∞ —Ñ–æ—Ä–º—É–ª—ã –Ω–∞ –Ω–∏–∑ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø—Ä–æ–º–∏–ª–ª–µ)

                double value1 = formula.getResult();                                 // –≤—ã–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –ø—Ä–∏–ª–∏—á–Ω–æ–π —Ñ–æ—Ä–º–µ
                String result = String.format("%.3f",value1);

                sendMessage(chatId, "–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –æ–ø—å—è–Ω–µ–Ω–∏—è - –æ–∫–æ–ª–æ " + result + " ‚Ä∞");



                double trezvo = formula.getResult() / vivod;                         //  –≤—ã–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω–æ 0.125 —É –º, –∏ 0.9 —É –∂ –≤ —á–∞—Å

                double end2 = trezvo * 60;
                int chas = (int) (end2/60);
               // String end = String.format("%.2f", trezvo);
                int min = (int) (trezvo  % 60);

                sendMessage(chatId, "–î–æ –≤—ã–≤–µ–¥–µ–Ω–∏—è –∞–ª–∫–æ–≥–æ–ª—è –æ–∫–æ–ª–æ " + chas + " —á. " + min + " –º–∏–Ω.\n" +
                        "–ß—Ç–æ–±—ã —Å–æ–≤–µ—Ä—à–∏—Ç—å –¥—Ä—É–≥–æ–π —Ä–∞—Å—Å—á–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ /start.\n" +
                        "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è!");


            } else {
                sendMessage(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ –¥—Ä—É–≥–æ–º—É.\n" +
                        "–õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—Å—á—ë—Ç–∞.");
            }
        }

    }

    public void handleCallBack(CallbackQuery callbackQuery) {

        // –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–µ—Å–æ–º
        InlineKeyboardMarkup markUpInLine2 = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInLine = new ArrayList<>();
        List<InlineKeyboardButton> rowInLine = new ArrayList<>();
        List<InlineKeyboardButton> rowInLine2 = new ArrayList<>();
        var button1 = new InlineKeyboardButton();
        button1.setText("–¥–æ 59");
        button1.setCallbackData("5");
        var button2 = new InlineKeyboardButton();
        button2.setText("60-69");
        button2.setCallbackData("6");
        var button3 = new InlineKeyboardButton();
        button3.setText("70-79");
        button3.setCallbackData("7");
        var button4 = new InlineKeyboardButton();
        button4.setText("80-89");
        button4.setCallbackData("8");
        var button5 = new InlineKeyboardButton();
        button5.setText("90-99");
        button5.setCallbackData("9");
        var button6 = new InlineKeyboardButton();
        button6.setText("—Å–≤—ã—à–µ 100");
        button6.setCallbackData("10");
        rowInLine.add(button1);
        rowInLine.add(button2);
        rowInLine.add(button3);
        rowInLine2.add(button4);
        rowInLine2.add(button5);
        rowInLine2.add(button6);
        rowsInLine.add(rowInLine);
        rowsInLine.add(rowInLine2);
        markUpInLine2.setKeyboard(rowsInLine);


        // –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –Ω–∞–ø–∏—Ç–∫–∞–º–∏
        InlineKeyboardMarkup markUpInLine3 = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rrowsInLine = new ArrayList<>();
        List<InlineKeyboardButton> rrowInLine = new ArrayList<>();
        List<InlineKeyboardButton> rrowInLine2 = new ArrayList<>();
        var button11 = new InlineKeyboardButton();
        button11.setText("–ü–∏–≤–æ \uD83C\uDF7A");
        button11.setCallbackData("300");
        var button12 = new InlineKeyboardButton();
        button12.setText("–í–æ–¥–∫–∞ \uD83E\uDD5B");
        button12.setCallbackData("32");
        var button13 = new InlineKeyboardButton();
        button13.setText("–ö–æ–Ω—å—è–∫ \uD83E\uDD43");
        button13.setCallbackData("27");
        var button14 = new InlineKeyboardButton();
        button14.setText("–í–∏–Ω–æ \uD83C\uDF77");
        button14.setCallbackData("120");
        var button15 = new InlineKeyboardButton();
        button15.setText("–õ–∏–∫—ë—Ä \uD83C\uDF78");
        button15.setCallbackData("40");
        var button16 = new InlineKeyboardButton();
        button16.setText("–ú–∞—Ä—Ç–∏–Ω–∏ \uD83C\uDF79");
        button16.setCallbackData("100");
        rrowInLine.add(button11);
        rrowInLine.add(button12);
        rrowInLine.add(button13);
        rrowInLine2.add(button14);
        rrowInLine2.add(button15);
        rrowInLine2.add(button16);
        rrowsInLine.add(rrowInLine);
        rrowsInLine.add(rrowInLine2);
        markUpInLine3.setKeyboard(rrowsInLine);
        Message message = callbackQuery.getMessage();
        String data = callbackQuery.getData();

        switch (data) {


            //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ —Å –ø–æ–ª–æ–º

            case "M" -> {
                formula.setSex ("M");                                   // –∑–∞–ø–∏—Å—ã–≤–∞—é –ø–æ–ª –≤ –∫–ª–∞—Å—Å –§–æ—Ä–º—É–ª–∞
                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í–∞—à –ø–æ–ª - –º—É–∂—Å–∫–æ–π.
                                            –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –≤–∞—à–µ–≥–æ –≤–µ—Å–∞:
                                            """)
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine2)
                                    .build());
                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }


            case "F" -> {
                formula.setSex("F");

                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í–∞—à –ø–æ–ª - –∂–µ–Ω—Å–∫–∏–π.
                                            –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –≤–∞—à–µ–≥–æ –≤–µ—Å–∞:
                                            """)
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine2)
                                    .build());
                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }


            //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ —Å –≤–µ—Å–æ–º
            case "5" -> {
                                                                // –∑–∞–ø–∏—Å—ã–≤–∞—é –≤–µ—Å –≤ –∫–ª–∞—Å—Å –§–æ—Ä–º—É–ª–∞
                formula.setWeight(5);
                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–µ—Å –¥–æ 59 –∫–≥.
                                            –ü–µ—Ä–µ–π–¥—ë–º –∫ –Ω–∞–ø–∏—Ç–∫–∞–º.
                                            –ß—Ç–æ –≤—ã–ø–∏–≤–∞–ª–∏?
                                            """ )
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine3)
                                    .build());
                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }
            case "6" -> {

                formula.setWeight(6);
                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–µ—Å 60-69 –∫–≥.
                                            –ü–µ—Ä–µ–π–¥—ë–º –∫ –Ω–∞–ø–∏—Ç–∫–∞–º.
                                            –ß—Ç–æ –≤—ã–ø–∏–≤–∞–ª–∏?
                                            """)
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine3)
                                    .build());
                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }
            case "7" -> {

                formula.setWeight(7);
                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–µ—Å 70-79 –∫–≥.
                                            –ü–µ—Ä–µ–π–¥—ë–º –∫ –Ω–∞–ø–∏—Ç–∫–∞–º.
                                            –ß—Ç–æ –≤—ã–ø–∏–≤–∞–ª–∏?
                                            """)
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine3)
                                    .build());
                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }
            case "8" -> {

                formula.setWeight(8);
                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–µ—Å 80-89 –∫–≥.
                                            –ü–µ—Ä–µ–π–¥—ë–º –∫ –Ω–∞–ø–∏—Ç–∫–∞–º.
                                            –ß—Ç–æ –≤—ã–ø–∏–≤–∞–ª–∏?
                                            """)
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine3)
                                    .build());
                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }
            case "9" -> {

                formula.setWeight(9);
                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–µ—Å 90-99 –∫–≥.
                                            –ü–µ—Ä–µ–π–¥—ë–º –∫ –Ω–∞–ø–∏—Ç–∫–∞–º.
                                            –ß—Ç–æ –≤—ã–ø–∏–≤–∞–ª–∏?
                                            """)
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine3)
                                    .build());
                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }
            case "10" -> {

                formula.setWeight(10);
                try {
                    execute(
                            SendMessage.builder()
                                    .text("""
                                            –í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–µ—Å 100 –∫–≥. –∏ –±–æ–ª–µ–µ.
                                            –ü–µ—Ä–µ–π–¥—ë–º –∫ –Ω–∞–ø–∏—Ç–∫–∞–º.
                                            –ß—Ç–æ –≤—ã–ø–∏–≤–∞–ª–∏?
                                            """)
                                    .chatId(callbackQuery.getMessage().getChatId())
                                    .replyMarkup(markUpInLine3)
                                    .build());

                } catch (TelegramApiException e) {
                    throw new RuntimeException(e);
                }
            }
            default -> {

                int a;
                a = Integer.parseInt(callbackQuery.getData());
                formula.setDrink(a);
                sendMessage(message.getChatId(), "–°–∫–æ–ª—å–∫–æ –±—ã–ª–æ –≤—ã–ø–∏—Ç–æ –Ω–∞–ø–∏—Ç–∫–∞? \uD83E\uDED7\n–ù–∞–ø—Ä–∏–º–µ—Ä, 200 –º–ª");


            }

        }
    }

    @Override
    public String getBotUsername() {
        return BotConfig.name;
    }

    // —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ —Å –∏–º–µ–Ω–µ–º –∏ —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    @Override
    public String getBotToken() {
        return BotConfig.token;
    }

    public static void main(String[] args) throws TelegramApiException {
        AlcoCheckerBot bot = new AlcoCheckerBot();
        TelegramBotsApi telegramBotsApi = new TelegramBotsApi(DefaultBotSession.class);
        telegramBotsApi.registerBot(bot);
    }


    private void sendMessage(Long chatId, String text) {
        var chatIdStr = String.valueOf(chatId);
        var sendMessage = new SendMessage(chatIdStr, text);
        try {
            execute(sendMessage);
        } catch (TelegramApiException e) {
            throw new RuntimeException(e);
        }
    }
}